doctype html
html(lang="ru")
    head
        meta(charset="UTF-8")
        meta(name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no")
        link(href="styles/normalize.css" rel="stylesheet")
        link(href="styles/main.css" rel="stylesheet")
        title bs-components with js
    body
        p(id="just_text") just text
        .wrapper
            .example-accordion
                h3.bs-components-title Accordion
                p Для работы Accordion'а необходимы: _transitions.scss, _accordion.scss и collapse.js.
                .accordion(id="accordionExample")
                    .accordion-item
                        h2.accordion-header(id="headingOne")
                            button.accordion-button(type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne")
                               | Accordion Item #1
                        .accordion-collapse.collapse.show(id="collapseOne" aria-labelledby="headingOne" data-bs-parent="#accordionExample")
                            .accordion-body
                                strong This is the first item's accordion body.
                                |  It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the 
                                code .accordion-body
                                | , though the transition does limit overflow.
                    .accordion-item
                        h2.accordion-header(id="headingTwo")
                            button.accordion-button.collapsed(type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo")
                                | Accordion Item #2
                        .accordion-collapse.collapse(id="collapseTwo" aria-labelledby="headingTwo" data-bs-parent="#accordionExample")
                            .accordion-body
                                strong This is the second item's accordion body.
                                |  It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the 
                                code .accordion-body
                                | , though the transition does limit overflow.
                    .accordion-item
                        h2.accordion-header(id="headingThree")
                            button.accordion-button.collapsed(type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree")
                                | Accordion Item #3
                        .accordion-collapse.collapse(id="collapseThree" aria-labelledby="headingThree" data-bs-parent="#accordionExample")
                            .accordion-body
                                strong This is the third item's accordion body.
                                |  It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the 
                                code .accordion-body
                                | , though the transition does limit overflow.
            .example-alert
                h3.bs-components-title Alert
                .alert.alert-primary(role="alert") Пример компонента alert-primary
                .alert.alert-secondary(role="alert") Пример компонента alert-secondary
                div(id="liveAlertPlaceholder")
                button.btn.btn-primary(type="button" id="liveAlertBtn") Show live alert
            .example-carousel
                h3.bs-components-title Carousel
                .carousel.slide(id="carouselExampleControls" data-bs-ride="carousel" style="width: 500px; height: 500px")
                    .carousel-inner
                        .carousel-item.active
                            img.d-block.w-100(src="img/ice.jpg" alt="...")
                        .carousel-item
                            img.d-block.w-100(src="img/nine.jpg" alt="...")
                        .carousel-item
                            img.d-block.w-100(src="img/mask.jpg" alt="...")
                    button.carousel-control-prev(type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev")
                        span.carousel-control-prev-icon(aria-hidden="true")
                        span.visually-hidden Previous
                    button.carousel-control-next(type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next")
                        span.carousel-control-next-icon(aria-hidden="true")
                        span.visually-hidden Next
            .example-collapse
                h3.bs-components-title !! Collapse
                p Необходим импорт _transitions.scss и collapse.js
                p
                    a.btn.btn-primary(data-bs-toggle="collapse" href="#collapseExample" role="button" aria-control="collapseExample") Link with href
                    button.btn.btn-primary(type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample") Button with data-bs-target
                .collapse(id="collapseExample")
                    .card.card-body Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger.
            .example-dropdowns
                h3.bs-components-title !! Dropdowns
                .container-fluid
                    .row
                        .col
                            .dropdown
                                button.btn.btn-secondary.dropdown-toggle(type="button" data-bs-toggle="dropdown" aria-expanded="false") Кнопка Dropdown
                                ul.dropdown-menu
                                    li
                                        a.dropdown-item(href="#") Action
                                    li
                                        a.dropdown-item(href="#") Another action
                                    li
                                        a.dropdown-item(href="#") Something else here
                        .col
                            .dropdown
                                a.btn.btn-secondary.btn-lg.dropdown-toggle(href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false") Ссылка Dropdown
                                ul.dropdown-menu
                                    li
                                        a.dropdown-item(href="#") Первый пункт
                                    li
                                        a.dropdown-item(href="#") Второй пункт
                                    li
                                        a.dropdown-item(href="#") Третий пункт
            .example-modal
                h3.bs-components-title !! Modal
                p  Статическое окно
                // Кнопка, которая запускает модальное окно:
                button.btn.btn-primary(type="button" data-bs-toggle="modal" data-bs-target="#exampleModal") Запустить демо модального окна
                // Само модальное окно
                .modal.fade(id="exampleModal" tabindex="-1" aria-labeledby="exampleModalLabel" aria-hidden="true")
                    .modal-dialog
                        .modal-content
                            .modal-header
                                h5.modal-title(id="exampleModalLabel") Заголовок модального окна
                                button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Закрыть")
                            .modal-body
                                p Здесь у нас может быть любой текст.
                                p И ещё какой-нибудь текст
                            .modal-footer
                                button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Закрыть
                                button.btn.btn-primary(type="button") Сохранить изменения
            .example-navbar
                h3.bs-components-title Navbar
                p.
                    Вообще Navbar - это не js-компонент.

                    Но в этом примере использован #[em Dropdown], поэтому нам непобходимо подключить _dropdown.scss и dropdown.js, а также collapse.js и _transitions.scss, который необходим для его работы. Также _nav.scss и _navbar.scss. Также нужен jquery и popper.js. Но у меня работает и без popper.js.
            
                    Когда мы уменьшаем окно, меню схлопывается в разворачивающийся значок, который тоже является Dropdown'ом.
                p То есть, нам нужно подключить: _transitions.scss, _dropdown.scss, _nav.scss, _navbar.scss, collapse.js, dropdown.js и конечно jquery.
                p Если скопировать этот первый пример с оф. сайта Bootstrap'а, то иконка навбара не будет отображаться, когда мы уменьшим окно. Это из-за того, что у тэга NAV пропущен класс .navbar-light

                nav.navbar.navbar-expand-lg.navbar-light.bg-light
                    .container-fluid
                        a.navbar-brand(href="#") Navbar
                        button.navbar-toggler(type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation")
                            span.navbar-toggler-icon
                        .collapse.navbar-collapse(id="navbarSupportedContent")
                            ul.navbar-nav.me-auto.mb-2.mb-lg-0
                                li.nav-item
                                    a.nav-link.active(aria-current="page" href="#") Home
                                li.nav-item
                                    a.nav-link(href="#") Link
                                li.nav-item.dropdown
                                    a.nav-link.dropdown-toggle(href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false") Dropdown
                                    ul.dropdown-menu
                                        li
                                            a.dropdown-item(href="#") Action
                                        li
                                            a.dropdown-item(href="#") Another action
                                        li
                                            hr.dropdown-divider
                                        li
                                            a.dropdown-item(href="#") Something else here
                                li.nav-item
                                    a.nav-link.disabled Disabled
                            form.d-flex(role="search")
                                input.form-control.me-2(type="search" placeholder="Search" aria-label="Search")
                                button.btn.btn-outline-success(type="submit") Search
                a(href="bootstrap/bootstrap-navbar.html") Подробнее

            .example-offcanvas
                h3.bs-components-title Offcanvas
                // Кнопки, которые вызывают Offcanvas
                a.btn.btn-primary(href="#offcanvasExample" data-bs-toggle="offcanvas" role="button" aria-controls="offcanvasExample") Link with href
                button.btn.btn-primary(type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample" aria-controls="offcanvasExample") Button with data-bs-target
                // Сам Offcanvas
                .offcanvas.offcanvas-start(tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel")
                    .offcanvas-header
                        h5.offcanvas-title(id="offcanvasExampleLabel") Offcanvas
                        button.btn-close(type="button" data-bs-dismiss="offcanvas" aria-label="Close")
                    .offcanvas-body
                        div Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
                        .dropdown.mt-3
                            button.btn.btn-secondary.dropdown-toggle(type="button" data-bs-toggle="dropdown") Dropdown button
                            ul.dropdown-menu
                                li
                                    a.dropdown-item(href="#") Action
                                li
                                    a.dropdown-item(href="#") Another action
                                li
                                    a.dropdown-item(href="#") Something else here
            .example-popover
                h3.bs-components-title Popover
                p Popover тра-та-та
                button.btn.btn-lg.btn-danger(type="button" data-bs-toggle="popover" data-bs-title="Popover title" data-bs-content="And here's some amazing content. It's very engaging. Right? Или не Right?") Нажми, чтобы включить Popover
                p Наполнение пространства
                p Ещё одно наполнение пространства
                p И наконец последнее наполнение в этом блоке.
            .example-ppp
                h3.bs-components-title alala 
                <div class="row">
                    <div class="col-4">
                        <div id="list-example" class="list-group">
                            <a class="list-group-item list-group-item-action" href="#list-item-1">Item 1</a>
                            <a class="list-group-item list-group-item-action" href="#list-item-2">Item 2</a>
                            <a class="list-group-item list-group-item-action" href="#list-item-3">Item 3</a>
                            <a class="list-group-item list-group-item-action" href="#list-item-4">Item 4</a>
                        </div>
                    </div>
                    <div class="col-8">
                        <div data-bs-spy="scroll" data-bs-target="#list-example" data-bs-smooth-scroll="true" class="scrollspy-example" tabindex="0" style="position: relative; overflow-y: scroll; height: 250px">
                            <h4 id="list-item-1">Item 1</h4>
                            <p>...</p>
                            <p>...</p>
                            <p>...</p>
                            <p>...</p>
                            <h4 id="list-item-2">Item 2</h4>
                            <p>...</p>
                            <p>...</p>
                            <p>...</p>
                            <p>...</p>
                            <h4 id="list-item-3">Item 3</h4>
                            <p>...</p>
                            <p>...</p>
                            <p>...</p>
                            <p>...</p>
                            <h4 id="list-item-4">Item 4</h4>
                            <p>...</p>
                            <p>...</p>
                            <p>...</p>
                            <p>...</p>
                        </div>
                    </div>
                </div>
            .example-toasts
                h3.bs-components-title Toasts
                p scss-файл называется "toasts.css", а вот js-файл - в единственном числе: "toast.js". Такие дела, блин.
                p Чтобы отобразить шаблон тоста из примеров в bootstrap-доках, нужно добавить к классу "toast" класс "show".
                p Класс "hide", наоборот, прячет элементы.
                .toast.show(role="alert" aria-live="assertive" aria-atomic="true")
                    .toast-header
                        img.rounded.me-2(src="..." alt="...")
                        strong.me-auto Bootstrap
                        small 11 min ago
                        button.btn-close(type="button" data-bs-dismiss="toast" aria-label="Close")
                    .toast-body
                        | Hello, world! This is a toast message.
               
                p Чтобы по нажатию кнопки сделать Toast видимым, нужно прописать скрипт: $("#myBtn").click(function() {$("#myToast").toast("show")})
                p Кнопка "show toast" и сам Toast друг к другу автоматически не привязываются. Или я пока не понял, как это сделать.
                button.btn.btn-primary(type="button" id="liveToastBtn") Show live toast
                .toast-container.position-fixed.bottom-0.end-0.p-3
                    .toast(id="liveToast" role="alert" aria-live="assertive" aria-atomic="true")
                        .toast-header
                            img.rounded.me-2(src="..." alt="...")
                            strong.me-auto Bootstrap
                            small 12 mins ago
                            button.btn-close(type="button" data-bs-dismiss="toast" aria-label="Close")
                        .toast-body
                            |   Hello, world! This is a toast message.
                h4 Что осталось непонятным
                p Тот Toast, который мы запустили кнопкой, закрывается плавно, когда мы нажимаем кнопку "Закрыть". А первый пропадает мгновенно.
            .example-tooltip
                h3.bs-components-title Tooltip
                p Tooltip появляется при наведении курсора на ссылки в нижеследующем тексте:
                p.muted
                    | Placeholder text to demonstrate some 
                    a(href="#" data-bs-toggle="tooltip" data-bs-title="Default tooltip") inline links
                    |  with tooltips. This is now just filler, no killer. Content placed here just to mimic the presence of 
                    a(href="#" data-bs-toggle="tooltip" data-bs-title="Another tooltip") real text
                    | . And all that just to give you an idea of how tooltips would look when used in real-world situations. So hopefully you've now seen how 
                    a(href="#" data-bs-toggle="tooltip" data-bs-title="Another one here too") these tooltips on links
                    |  can work in practice, once you use them on 
                    a(href="#" data-bs-toggle="tooltip" data-bs-title="The last tip!") your own
                    |  site or project.
        script(src="scripts/bs-components-entry.js" type="text/javascript")
        //script(src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous")
        //script(src="./../node_modules/bootstrap/dist/js/bootstrap.bundle.js" type="text/javascript")
        
        
        